#!/bin/bash

domain=$1

[ "$domain" ] || {
  echo >&2 "usage: $0 DOMAIN"
  echo >&2 "  - i.e. $0 my.website.com"
  exit 1
}

# unit will not be listenting to port 80 yet, so this is ok right now:
sudo certbot certonly -d "$domain" --standalone
sudo cat /etc/letsencrypt/live/"$domain"/{fullchain,privkey}.pem |\
  curl -X PUT --data-binary @- --unix-socket /opt/unit/control.unit.sock localhost/certificates/my-certificate

# TODO: automate the renewal, which will require:
# - turning off unit's port 80 listener for a sec
# - getting the new cert
# - turning on unit's port 80 listener again
# - loading the new cert into unit's config
# - pointing your :443 listener to the new cert
# - deleting the old cert from unit's config
#
# This can all be done easily with certbot's hooks. They have pre and post
# cert update hooks (that only run when you actually need a new cert. most
# of the time if you call `certbot renew` it's a no-op, so you can do it
# every day in cron if you like) for exactly this situation.
#
# I just haven't had this set up for 90 days yet so haven't tackled renewal



